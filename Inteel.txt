using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public string findSequence(int input1,string[] input2,int[] input3)
    {
        //Read only region end
        int[]n=new int[input1];
		string s="";
		int[] arr=new int[3];
		for(int i=0;i<input1;i++)
		{
			n[i]=input3[i];
		}
		Array.Sort(n);
		for(int j=0;j<input1-2;j++)
		{
			if(n[j]+1==n[j+1] && n[j+1]+1==n[j+2])
			{
				arr[0]=n[j];
			}
		}
		if(arr[0]!=0)
		{
			arr[1]=arr[0]+1;
			arr[2]=arr[1]+1;
			for(int k=0;k<input1;k++)
			{
				if(arr[0]==input3[k])
				{
					s=s+input2[k]+":";
				}
			}
			for(int k=0;k<input1;k++)
			{
				if(arr[1]==input3[k])
				{
					s=s+input2[k]+":";
				}
			}
			for(int k=0;k<input1;k++)
			{
				if(arr[2]==input3[k])
				{
					s=s+input2[k];
				}
			}
			return s;
		}
		else
		{
			return "NONE";
		}
        
    }
}
*************************************************************************************************************************
using System.Linq;     
int c=0,f=0,k=0;
int key=0,addr=0,sum=0;
for(int i=0;i<input2;i++)
{
if(input1[i]>0)

{
c++;
}
}
if(c==input2)
{
sum=input1.Max();
}
else
{
while(f==0)
{
if(input1[j]>0)
{
f=0;
}
else
{
f=1;
}
if(input1[j>99)
{
addr=Math.Abs(input1[j]%100);
key=Math.Abs(input1[j]%100);
}
else
{
addr=Math.Abs(input1[j]%10);
key=Math.Abs(input1[j]%10);
}
j=addr;
if(k%2==0)
{
sum+=key;
}
else
{
sum-=key;
}
k++;
}
}
return sum;
}
}

***************************************************************************************************************************
string[] s=input1.Split(' ');
string s1="",s2="",result="",ans="";
for(int i=0;i<s.Length;i++)
{
char[] ch=s[i].ToCharArray();
for(int j=0;j<ch.Length;j++)
{
if(j%2==0)
{
s1=s1+ch[j];
}
else
{
s2=s2+ch[j];
}}
if(input2==2)
{
ans=s1+s2;
}
else
{
char[] ch1=s2.ToCharArray();
Array.Reverse(ch1);
ans=s1+new string(ch1);
}
result+=ans+" ";
ans="";
s1="";
s2="";
}
return result.Substring(0,result.Length-1);
}
}
=============================================================================================================================
using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public double FindAverage(int input1)
    {
        //Read only region end
        int i=0;
		double sum=0,avg=0;
		int len=0;
		int[] n=new int[input1.ToString().Length];
		do
		{
			n[i]=input1%10;
			i++;
			input1=input1/10;
		}while(input1!=0);
		Array.Reverse(n);
		for(int j=0;j<n.Length;j++)
		{
			sum=sum+n[j];
		}
		if(n[0]==0)
		{
			len=n.Length-1;
		}
		else
		{
			len=n.Length;
		}
		
		avg=sum/len;
		return Math.Round(avg,2);
    }
}

=========================================================================================================================
using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public int SumOfPowerOfDigits(int input1)
    {
        //Read only region end
        int[] n=new int[input1.ToString().Length];
		int k=0,len=0,i=0;
		int sum=0,res=0;
		while(input1!=0)
		{
			n[i]=input1%10;
			i++;
			input1=input1/10;
		}
		Array.Reverse(n);
		len=n.Length;
		for(int j=0;j<n.Length-1;j++)
		{
			k=j+1;
			if(k==n.Length)
			{
				break;
			}
			else
			{
				sum=sum+(int)Math.Pow(n[j],n[k]);
			}
		}
		res=sum+(int)Math.Pow(n[n.Length-1],len);
		return res;
    }
}
=========================================================================================================================
using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public int LeastFrequentDigit(int input1,int input2,int input3,int input4)
    {
        //Read only region end
         int[] arr=new int[10];
		do
		{
			arr[input1%10]++;
			input1 /=10;
		}
		while(input1!=0);
		do
		{
			arr[input2%10]++;
			input2 /=10;
		}
		while(input2!=0);
		do
		{
			arr[input3%10]++;
			input3 /=10;
		}
		while(input3!=0);
		do
		{
			arr[input4%10]++;
			input4 /=10;
		}
		while(input4!=0);
		int min=100,pos=0;
		for(int i=0;i<arr.Length;i++)
		{
			if(arr[i]<min && arr[i]!=0)
			{
				min=arr[i];
				pos=i;
			}
		}
		return pos;
    }
}
==============================================================================================================================

using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public Boolean StepNumber(int input1)
    {
        //Read only region end
       bool b=false;
	
		int[] n=new int[input1.ToString().Length];
		int i=0,sum=0,k=0;
		while(input1!=0)
		{
		n[i]=input1%10;
			i++;
			input1=input1/10;
		}
		Array.Reverse(n);
		for(int j=0;j<n.Length;j++)
		{
			k=j+1;
			if(k==n.Length)
			{
				break;
			}
			else{
				sum=(int)Math.Abs(n[j]-n[k]);
			}
			if(sum==1|| sum==0)
				{
					b=true;
				}
				else
				{
					b=false;
					break;
				}
			}
			return b;
		
		}
		
    }

=========================================================================================================================
using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public int FindNumberOfOccurrence(int input1,int input2)
    {
        //Read only region end
       string s="";
		int count=0;
		for(int i=0;i<=input2;i++)
		{
			s=Convert.ToString(i);
			for(int j=0;j<s.Length;j++)
			{
				if(input1==char.GetNumericValue(s[j]))
				{
					count++;
				}
			}
		}
		return count;
		
		
    }
}
============================================================================================================================
