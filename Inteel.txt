using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public string findSequence(int input1,string[] input2,int[] input3)
    {
        //Read only region end
        int[]n=new int[input1];
		string s="";
		int[] arr=new int[3];
		for(int i=0;i<input1;i++)
		{
			n[i]=input3[i];
		}
		Array.Sort(n);
		for(int j=0;j<input1-2;j++)
		{
			if(n[j]+1==n[j+1] && n[j+1]+1==n[j+2])
			{
				arr[0]=n[j];
			}
		}
		if(arr[0]!=0)
		{
			arr[1]=arr[0]+1;
			arr[2]=arr[1]+1;
			for(int k=0;k<input1;k++)
			{
				if(arr[0]==input3[k])
				{
					s=s+input2[k]+":";
				}
			}
			for(int k=0;k<input1;k++)
			{
				if(arr[1]==input3[k])
				{
					s=s+input2[k]+":";
				}
			}
			for(int k=0;k<input1;k++)
			{
				if(arr[2]==input3[k])
				{
					s=s+input2[k];
				}
			}
			return s;
		}
		else
		{
			return "NONE";
		}
        
    }
}
*************************************************************************************************************************
Array Traverse

using System.Linq;     
int c=0,f=0,k=0;
int key=0,addr=0,sum=0;
for(int i=0;i<input2;i++)
{
if(input1[i]>0)

{
c++;
}
}
if(c==input2)
{
sum=input1.Max();
}
else
{
while(f==0)
{
if(input1[j]>0)
{
f=0;
}
else
{
f=1;
}
if(input1[j>99)
{
addr=Math.Abs(input1[j]%100);
key=Math.Abs(input1[j]%100);
}
else
{
addr=Math.Abs(input1[j]%10);
key=Math.Abs(input1[j]%10);
}
j=addr;
if(k%2==0)
{
sum+=key;
}
else
{
sum-=key;
}
k++;
}
}
return sum;
}
}

***************************************************************************************************************************
string[] s=input1.Split(' ');
string s1="",s2="",result="",ans="";
for(int i=0;i<s.Length;i++)
{
char[] ch=s[i].ToCharArray();
for(int j=0;j<ch.Length;j++)
{
if(j%2==0)
{
s1=s1+ch[j];
}
else
{
s2=s2+ch[j];
}}
if(input2==2)
{
ans=s1+s2;
}
else
{
char[] ch1=s2.ToCharArray();
Array.Reverse(ch1);
ans=s1+new string(ch1);
}
result+=ans+" ";
ans="";
s1="";
s2="";
}
return result.Substring(0,result.Length-1);
}
}
=============================================================================================================================
using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public double FindAverage(int input1)
    {
        //Read only region end
        int i=0;
		double sum=0,avg=0;
		int len=0;
		int[] n=new int[input1.ToString().Length];
		do
		{
			n[i]=input1%10;
			i++;
			input1=input1/10;
		}while(input1!=0);
		Array.Reverse(n);
		for(int j=0;j<n.Length;j++)
		{
			sum=sum+n[j];
		}
		if(n[0]==0)
		{
			len=n.Length-1;
		}
		else
		{
			len=n.Length;
		}
		
		avg=sum/len;
		return Math.Round(avg,2);
    }
}

=========================================================================================================================
using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public int SumOfPowerOfDigits(int input1)
    {
        //Read only region end
        int[] n=new int[input1.ToString().Length];
		int k=0,len=0,i=0;
		int sum=0,res=0;
		while(input1!=0)
		{
			n[i]=input1%10;
			i++;
			input1=input1/10;
		}
		Array.Reverse(n);
		len=n.Length;
		for(int j=0;j<n.Length-1;j++)
		{
			k=j+1;
			if(k==n.Length)
			{
				break;
			}
			else
			{
				sum=sum+(int)Math.Pow(n[j],n[k]);
			}
		}
		res=sum+(int)Math.Pow(n[n.Length-1],len);
		return res;
    }
}
=========================================================================================================================
using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public int LeastFrequentDigit(int input1,int input2,int input3,int input4)
    {
        //Read only region end
         int[] arr=new int[10];
		do
		{
			arr[input1%10]++;
			input1 /=10;
		}
		while(input1!=0);
		do
		{
			arr[input2%10]++;
			input2 /=10;
		}
		while(input2!=0);
		do
		{
			arr[input3%10]++;
			input3 /=10;
		}
		while(input3!=0);
		do
		{
			arr[input4%10]++;
			input4 /=10;
		}
		while(input4!=0);
		int min=100,pos=0;
		for(int i=0;i<arr.Length;i++)
		{
			if(arr[i]<min && arr[i]!=0)
			{
				min=arr[i];
				pos=i;
			}
		}
		return pos;
    }
}
==============================================================================================================================

using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public Boolean StepNumber(int input1)
    {
        //Read only region end
       bool b=false;
	
		int[] n=new int[input1.ToString().Length];
		int i=0,sum=0,k=0;
		while(input1!=0)
		{
		n[i]=input1%10;
			i++;
			input1=input1/10;
		}
		Array.Reverse(n);
		for(int j=0;j<n.Length;j++)
		{
			k=j+1;
			if(k==n.Length)
			{
				break;
			}
			else{
				sum=(int)Math.Abs(n[j]-n[k]);
			}
			if(sum==1|| sum==0)
				{
					b=true;
				}
				else
				{
					b=false;
					break;
				}
			}
			return b;
		
		}
		
    }

=========================================================================================================================
using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public int FindNumberOfOccurrence(int input1,int input2)
    {
        //Read only region end
       string s="";
		int count=0;
		for(int i=0;i<=input2;i++)
		{
			s=Convert.ToString(i);
			for(int j=0;j<s.Length;j++)
			{
				if(input1==char.GetNumericValue(s[j]))
				{
					count++;
				}
			}
		}
		return count;
		
		
    }
}
============================================================================================================================
	WORD STATICS


public class UserMainCode
{
    public string StringStatistics(string input1)
    {
        //Read only region end
        //Write code here
		string str="";
		int a = 0,b=0;
		string res="";
		foreach(char c in input1){
			if(char.IsLetter(c)){
				b++;
				str += c.ToString();
			}
			else 
			{
				a +=(int)c-48;
				Console.WriteLine(a);
			}
		}
		if(b==input1.Length||b==0)
		{
			return "ZERO";
		}else return 	res = b.ToString()+str+a.ToString();
		
        //throw new NotImplementedException("Method  StringStatistics(string input1) not Implemented.");
    }
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

public class UserMainCode
{
    public int weightOfString(string input1,int input2)
    {
        //Read only region end
        //Write code here
		input1 = input1.ToUpper();
		int sum=0;
		if(input2==0){
			foreach(char c in input1)
			{
				if(char.IsLetter(c)){
				if(c!='A' && c!='E' && c!='I' && c!='O' && c!='U')
				{
					sum += c -64;
				}
				
			}
				else
				{
					sum += 0;
				}
			}
		}
		if(input2==1){
			foreach(char c in input1){
				if(char.IsLetter(c)){
					sum += c -64;
				}
				else{
					sum += 0;
				}
			}
			
		}
		return sum;
        //throw new NotImplementedException("Method  weightOfString(string input1,int input2) not Implemented.");
    }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
CYCLIC DIGITS


public class UserMainCode
{
    public int sumOfSumsOfDigits(int input1)
    {
        //Read only region end
        //Write code here
		int i=0;
		int sum=0,p=1;
		int[] arr = new int[input1.ToString().Length];
		while(input1!=0){
			arr[i] = input1%10;
			i++;
			input1 /= 10;
		}
		Array.Reverse(arr);
		foreach(int a in arr){
			sum += a*p;
			p++;
		}
		return sum;
       // throw new NotImplementedException("Method  sumOfSumsOfDigits(int input1) not Implemented.");
    }
}
------------------------------------------------------------------------------------------------------------------------------
LINK 1


public class UserMainCode
{
    public double FindAverage(int input1)
    {
        //Read only region end
        //Write code here
		int i =0;double sum=0;
		double avg =0;
		int len = input1.ToString().Length;
		int[] arr = new int[input1.ToString().Length];
		while(input1!=0){
			arr[i] = input1%10;
			i++;
			input1 /= 10;
			if(arr[0]==0)
                          {
				len = input1.ToString().Length - 1;
			}
		}
		foreach(int a in arr){
			sum += a;
		}
		avg = sum/len;
		return System.Math.Round(avg,2);
        //throw new NotImplementedException("Method  FindAverage(int input1) not Implemented.");
    }
}
----------------------------------------------------------------------------------------------------------------------
LEAST FREQUENT


public class UserMainCode
{
    public int LeastFrequentDigit(int input1,int input2,int input3,int input4)
    {
        //Read only region end
        //Write code here
		int[] arr = new int[10];
		do{
			arr[input1%10]++;
			input1 /= 10;
		}
		while(input1!=0);
		do{
			arr[input2%10]++;
			input2 /= 10;
		}while(input2!=0);
		do{
			arr[input3%10]++;
			input3 /= 10;
		}while(input3!=0);
		do{
			arr[input4%10]++;
			input4 /= 10;
		}while(input4!=0);
		int min =100,pos=0;
		for(int i=0;i<arr.Length;i++){
			if(arr[i]<min && arr[i]!=0){
				min=arr[i];
				pos =i;
			}
		}
		return pos;
       // throw new NotImplementedException("Method  LeastFrequentDigit(int input1,int input2,int input3,int input4) not Implemented.");
    }
}
*************************************************************************************************************************************************************
FIND OCCURENCE



public class UserMainCode
{
    public int FindNumberOfOccurrence(int input1,int input2)
    {
        //Read only region end
        string s="";
		int count=0;
		for(int i=0;i<=input2;i++)
		{
		 	s=Convert.ToString(i);
			for(int j=0;j<s.Length;j++)
			{
				if(input1==char.GetNumericValue(s[j]))
				{
					count++;
				}
			}
		}
		return count;
		}
	
    }
--------------------------------------------------------------------------------------------------------------------------------
STEP NUMBER


public class UserMainCode
{
    public Boolean StepNumber(int input1)
    {
        //Read only region end
    int j=0,m=0;
		bool isstepno=false;
		string str=Convert.ToString(input1);
		for(int i=0;i<str.Length;i++)
		{
			j=i+1;			
			if(j==str.Length)
			{
			 break;
			}
			
			
				m=Math.Abs((int)char.GetNumericValue(str[i])-(int)char.GetNumericValue(str[j]));
				Console.Write(m);
						
		      if(m==1||m==0)
		      {
		          	isstepno=true;
		      }
			 else 
			 {
			     	isstepno=false;
				    break;
			 }
         }
		
		
		return isstepno;
	}
	
}
------------------------------------------------------------------------------------------------------------------------------
SUM OF POWER OF DIGITS:


public class UserMainCode
{
    public int SumOfPowerOfDigits(int input1)
    {
        //Read only region end
	int j=0;
		string s="";
		int sum=0;
		string str=Convert.ToString(input1);
		for(int i=0;i<str.Length;i++)
		{
			
			j=i+1;
			if(j==str.Length)
			{
				break;
			}
		int m=(int)Math.Pow((int)char.GetNumericValue(str[i]),(int)char.GetNumericValue(str[j]));			
		//m=0;
		sum+=m;		
		}
        sum+=(int)Math.Pow((int)char.GetNumericValue(str[str.Length-1]),str.Length);
		return sum;
	}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
FIND STRING

using System;
using System.Collections.Generic;
using System.Text;


public class UserMainCode
{
    public string FindString(string input1)
    {
        //Read only region end
          
		string s1="";
		string[] str=input1.Split(' ');
		for(int i=0;i<str.Length;i++)
		{
			char[] ch=str[i].ToCharArray();
			for(int j=0;j<ch.Length;j++)
			{
				if(char.IsUpper(ch[j]))
				{
					int m=ch[j]+ch.Length;
					if(m>=90)
					{
						s1+='Z';
					}
					else
					{
						s1+=(char)m;
					}
				}
				else if(char.IsLower(ch[j]))
				{
					int m=ch[j]+ch.Length;
					if(m>=122)
					{
						s1=s1+'z';
					}
					else
					{
						s1+=(char)m;
					}
					
				}	
			
		}
			s1+=" ";
	}
		StringBuilder sb=new StringBuilder(s1);
			sb.Remove(s1.Length-1,1);
			
			return sb.ToString();
    }

}
==================================================================================================================================================================

public class UserMainCode
{
    public string findSequence(int input1,string[] input2,int[] input3)
    {
        //Read only region end
        //Write code here
        int[] n=new int[input1];
		string s="";
		int[] arr=new int[3];
		for(int i=0;i<input1;i++)
		{
			n[i]=input3[i];
		}
		Array.Sort(n);
		for(int j=0;j<input1-2;j++)
		{
			if(n[j]+1==n[j+1] && n[j+1]+1==n[j+2])
			{
				arr[0]=n[j];
			}
		}
			if(arr[0]!=0)
			{
				arr[1]=arr[0]+1;
				arr[2]=arr[1]+1;
			     for(int k=0;k<input1;k++)
			      {
				       if(arr[0]==input3[k])
				             {
					           s=s+input2[k]+":";
				              }
			        }
			      for(int k=0;k<input1;k++)
			   {
				if(arr[1]==input3[k])
				{
					s=s+input2[k]+":";
				}
			 }
			for(int k=0;k<input1;k++)
			{
				if(arr[2]==input3[k])
				{
					s=s+input2[k];
				}
			}
	return s;
			
		}
		else
		{
			return "NONE";
		}
		
    }
}

********************************************************************************************************************
password

string[] str1=Splitstring(input1);
string[] str2=Splitstring(input2);
string password=str1[1].ToString()+str2[1].ToString()+str2[0].ToString();
return password;
}
string Splitstring(string s)
{
int l=s.Length;
int rem=l%3;
int q=l/3;
string[] str=new string[3];
if(rem==0)
{
str[0]=s.Substring(0*q,q);
str[1]=s.Substring(1*q,q);
str[2]=s.Substring(2*q,q);
}
if(rem==1)
{
str[0]=s.Substring(0*q,q);
str[1]=s.Substring(1*q,q+1);
str[2]=s.Substring((2*q)+1,q);
}
if(rem==2)
{
str[0]=s.Substring(0*q,q+1);
str[1]=s.Substring((1*q)+1,q);
str[2]=s.Substring((2*q)+1,q+1);
}
return str;
}
}
***************************************************************************************************************************************************************
\using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public int getLen_LS_ODD(int[] input1,int input2)
    {
        //Read only region end
         int count=0,seq=0;
		
		for(int i=0;i<input2;i++)
		{
			if(input1[i]%2!=0)
			{
				count++;
			}
			else
			{
				if(count>seq)
				{
					seq=count;
				}
				count=0;
			}
			
		}
		if(seq==0)
			return -1;
		return seq;
    }
}
************************************************************************************************************************************************************
using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public int AddSub(int input1,int input2)
    {
        //Read only region end
       int res=input1;
		for(int i=0,j=input1-1;j>0;i++,j--)
		{
			if(input2==1)
			{
			if(i%2==0)
			{
				res-=j;
			}
				else
				
					res+=j;
				
				
			}
			if(input2==2)
			{
			if(i%2==0)
			{
				res+=j;
			}
				else
				
					res-=j;
			}
				
			}
			
		
        return res;
    }
}
************************************************************************************************************************************************************

public class UserMainCode
{
    public int seriesN(int input1,int input2,int input3,int input4)
    {
        //Read only region end
        //Write code here
        int diff1=input2-input1;
		int diff2=input3-input2;
		int res=input3;
		for(int i=4,j=0;i<=input4;i++,j++)
		{
			if(j%2==0)
			{
				res+=diff1;
			}
			else
			{
				res+=diff2;
			}
		}
		return res;
    }
}
**************************************************************************************************************************************************************

public class UserMainCode
{
    public int sumOfSumsOfDigits(int input1)
    {
        //Read only region end
       
		int i=0,sum=0,p=1;
		int[] n =new int[input1.ToString().Length];
		while(input1!=0)
		{
			n[i]=input1%10;
			i++;
			input1 /=10;
		}
		foreach(int a in n)
		{
			sum=sum+a*p;
			p++;
		}
		return sum;
    }
}

============================================================================================================================================================