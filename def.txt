using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AssetManagement
{
    public class AssetTracking
    {
        const string ConnectionString = "Data Source=.;Initial Catalog=AssetManagement;User ID=sa;Password=wipro@123";
        public bool AddAsset(Asset obj)
        {
            bool Isadded = false;
            //throw new NotImplementedException();
            if (obj != null)
            {
                string s = null;
                Random rand = new Random();
                int i = rand.Next(1, 1000);

                s += obj.AssetType[0].ToString() + obj.AssetType[1].ToString() + i.ToString();
                obj.SerialNo = s;

                SqlConnection con = new SqlConnection(ConnectionString);
                SqlCommand cmd = new SqlCommand();
                cmd.CommandText = "insert into Asset values(@at,@sn,@pd,@ts)";
                cmd.Connection = con;
                cmd.Parameters.AddWithValue("@at", obj.AssetType);
                cmd.Parameters.AddWithValue("@sn", obj.SerialNo);
                cmd.Parameters.AddWithValue("@pd", DateTime.Now);
                cmd.Parameters.AddWithValue("@ts", "FREE POOL");
                con.Open();
                int rowcount = cmd.ExecuteNonQuery();
                con.Close();
                if (rowcount == 1)
                {
                    Isadded = true;
                }
                else
                {
                    Isadded = false;
                }
            }
            else
            {
                Isadded = false;
            }
            return Isadded;
        }

        public bool ModifyAsset(Asset obj)
        {
            bool Ismodify = false;
            //  throw new NotImplementedException();
            if (obj != null)
            {
                SqlConnection con = new SqlConnection(ConnectionString);
                SqlCommand cmd = new SqlCommand();
                cmd.CommandText = "update Asset set SerialNo=@sn,AssetType=@at,ProcurementDate=@pd where AssetID=@aid";
                cmd.Connection = con;
                cmd.Parameters.AddWithValue("@sn", obj.SerialNo);
                cmd.Parameters.AddWithValue("@at", obj.AssetType);
                cmd.Parameters.AddWithValue("@pd", DateTime.Now);
                cmd.Parameters.AddWithValue("@aid", obj.AssetID);
                con.Open();
                int rowcount = cmd.ExecuteNonQuery();
                con.Close();
                if (rowcount == 1)
                {
                    Ismodify = true;
                }
                else
                {
                    Ismodify = false;
                }
            }
            else
            {
                Ismodify = false;
            }
            return Ismodify;
        }

        public bool TagAsset(AssetTagging obj)
        {
            bool IsTagged = false;
            string status = "";

            if (obj != null)
            {
                SqlConnection con = new SqlConnection(ConnectionString);
                SqlCommand cmd = new SqlCommand();
                cmd.CommandText = "select TaggingStatus from Asset where AssetId=@aid";
                cmd.Connection = con;
                cmd.Parameters.AddWithValue("@aid", obj.AssetID);
                con.Open();
                SqlDataReader dr = cmd.ExecuteReader();
                if (dr.HasRows)
                {
                    dr.Read();
                    status = dr["TaggingStatus"].ToString().ToUpper();
                    if (status == "FREE POOL")
                    {
                        SqlConnection con1 = new SqlConnection(ConnectionString);
                        SqlCommand cmd1 = new SqlCommand();
                        cmd1.CommandText = "Insert into AssetTagging values(@eid,@aid,@td,null)";
                        cmd1.Connection = con1;
                        cmd1.Parameters.AddWithValue("@aid", obj.AssetID);
                        cmd1.Parameters.AddWithValue("@eid", obj.EmployeeID);
                        cmd1.Parameters.AddWithValue("@td", DateTime.Now);
                        con1.Open();
                        int rows = cmd1.ExecuteNonQuery();
                        con1.Close();
                        if (rows > 0)
                        {
                            SqlConnection con2 = new SqlConnection(ConnectionString);
                            SqlCommand cmd2 = new SqlCommand();
                            cmd2.CommandText = "update Asset set TaggingStatus=@ts where AssetID=@aid";
                            cmd2.Connection = con2;
                            cmd2.Parameters.AddWithValue("@ts", "Tagged");
                            cmd2.Parameters.AddWithValue("@aid", obj.AssetID);
                            con2.Open();
                            int rows2 = cmd2.ExecuteNonQuery();
                            con2.Close();
                            IsTagged = true;


                        }


                    }
                }
                con.Close();
            }

            return IsTagged;
        }


        public bool DeTagAsset(int intAssetId)
        {
            //throw new NotImplementedException();
            bool IsDetaged = false;
            if (intAssetId == 0)
            {
                IsDetaged = false;
            }
            else
            {
                SqlConnection con = new SqlConnection(ConnectionString);
                SqlCommand cmd = new SqlCommand();
                cmd.CommandText = "update AssetTagging set ReleaseDate=@rd where AssetID=@aid";
                cmd.Connection = con;
                cmd.Parameters.AddWithValue("@rd", DateTime.Now);
                cmd.Parameters.AddWithValue("@aid", intAssetId);
                con.Open();
                int rows = cmd.ExecuteNonQuery();
                con.Close();
                if (rows > 0)
                {
                    IsDetaged = true;
                }
                else
                {
                    IsDetaged = false;
                }
                if (IsDetaged == true)
                {

                    SqlConnection con1 = new SqlConnection(ConnectionString);
                    SqlCommand cmd1 = new SqlCommand();
                    cmd1.CommandText = "update Asset set TaggingStatus=@ts where AssetID=@aid";
                    cmd1.Connection = con;
                    cmd1.Parameters.AddWithValue("@ts", "Free Pool");
                    cmd1.Parameters.AddWithValue("@aid", intAssetId);
                    con.Open();
                    int rows2 = cmd1.ExecuteNonQuery();
                    if (rows2 > 0)
                    {
                        IsDetaged = true;
                    }
                    else
                    {
                        IsDetaged = false;
                    }
                }
                else
                {
                    IsDetaged = false;
                }
            }
            return IsDetaged;
        }

    }
}
           
        
   

==========================================================================================================================
using System;
using System.Data.SqlClient;

namespace MovieTicketing
{
    public class TicketingDataAccess
    {
        string ConnectionString = "Data Source=.;Initial Catalog=MovieTicketing;User ID=sa;Password=wipro@123";

        public bool AddMovie(Movies obj)
        {
            bool Isupdated = false;
            if (obj != null)
            {
             
                SqlConnection con = new SqlConnection(ConnectionString);
                SqlCommand cmd = new SqlCommand();
                cmd.CommandText = "Insert into Movies(MovieName,Director,PlaysPerDay,TicketPrice)values(@mn,@dir,@ppd,@tp)";
                cmd.Connection = con;
                cmd.Parameters.AddWithValue("@mn", obj.MovieName);
                cmd.Parameters.AddWithValue("@dir", obj.DirectorName);
                cmd.Parameters.AddWithValue("@ppd", obj.PlaysPerDay);
                cmd.Parameters.AddWithValue("@tp", obj.TicketPrice);
                con.Open();
              
                int rowCount = cmd.ExecuteNonQuery();
                con.Close();
                if (rowCount == 1)
                {
                    Isupdated = true;
                }
                else
                {
                    Isupdated = false;
                }
               
            }
          
            return Isupdated;
        }

        public bool AddTheatre(Theatres obj)
        {

            bool Isupdated = false;
            if (obj != null)
            {
                SqlConnection con = new SqlConnection(ConnectionString);
                SqlCommand cmd = new SqlCommand();
                cmd.CommandText = "Insert into Theatres(TheatreName,SeatingCapacity)values(@tn,@sc)";
                cmd.Connection = con;
                cmd.Parameters.AddWithValue("@tn", obj.TheatreName);
                cmd.Parameters.AddWithValue("@sc", obj.SeatingCapacity);
                
                con.Open();
               
                int rowCount = cmd.ExecuteNonQuery();
                con.Close();
                if (rowCount == 1)
                {
                    Isupdated = true;
                }
                else
                {
                    Isupdated = false;
                }
            }
         
            return Isupdated;
        }

        public bool AddShow(Shows obj)
        {
            bool Isupdated = false;
            if (obj != null)
            {
                SqlConnection con = new SqlConnection(ConnectionString);
                SqlCommand cmd = new SqlCommand();
                cmd.CommandText = "Insert into Shows (TheatreID,MovieID,StartDate,EndDate,StartTime,EndTime)values(@tid,@mid,@sd,@ed,@st,@et)";
                cmd.Connection = con;
                cmd.Parameters.AddWithValue("tid", obj.TheatreID);
                cmd.Parameters.AddWithValue("mid", obj.MovieID);
                cmd.Parameters.AddWithValue("sd", obj.StartDate);
                cmd.Parameters.AddWithValue("ed", obj.EndDate);
                cmd.Parameters.AddWithValue("st", obj.StartTime);
                cmd.Parameters.AddWithValue("et", obj.EndTime);
                con.Open();
                
                int rowcount = cmd.ExecuteNonQuery();
                con.Close();
                if (rowcount == 1)
                {
                    Isupdated = true;
                }
                else
                {
                    Isupdated = false;
                }

            }
         
            return Isupdated;

        }

        public string AddTicket(Tickets obj)
        {
            string moviename = "";
            decimal ticketprice;
            bool Isupdated = false;
            if(obj!=null)
            {
                SqlConnection con = new SqlConnection(ConnectionString);
                string query = "Select m.MovieName,m.TicketPrice from Movies m JOIN Shows s on m.MovieID=s.MovieID JOIN Tickets t on t.ShowID=s.ShowID where t.ShowID=@sid";
                SqlCommand cmd = new SqlCommand(query,con);
                cmd.Connection = con;
                cmd.Parameters.AddWithValue("@sid", obj.ShowID);
                con.Open();
                SqlDataReader dr = cmd.ExecuteReader();
                if(dr.HasRows)
                {
                    dr.Read();
                    moviename = dr["MovieName"].ToString();
                    ticketprice = decimal.Parse(dr["TicketPrice"].ToString());
                }
                else
                {
                    return null;
                }
                con.Close();
                obj.Amount= obj.NumberofPersons * ticketprice;
                string RefrenceCode = obj.CustomerName[0].ToString() + obj.CustomerName[1].ToString() + obj.NumberofPersons.ToString() + moviename[0].ToString()
                    + moviename[1].ToString() + obj.BookingDate.Day.ToString() + obj.BookingDate.Month.ToString();
                Random rd = new Random();
                int randomnumber = rd.Next(1, 1000);
                RefrenceCode = RefrenceCode + randomnumber.ToString();
                obj.ReferenceCode = RefrenceCode.ToUpper();

                SqlCommand cmd1 = new SqlCommand();
                cmd1.CommandText = "Insert into Tickets(ShowID,ReferenceCode,CustomerName,BookingDate,Amount,NumberOfPersons,TicketStatus)values(@sid,@rcd,@cn,@bd,@am,@np,@ts)";
                cmd1.Connection = con;
                cmd1.Parameters.AddWithValue("@sid", obj.ShowID);
                cmd1.Parameters.AddWithValue("@rcd", obj.ReferenceCode);
                cmd1.Parameters.AddWithValue("@cn", obj.CustomerName);
                cmd1.Parameters.AddWithValue("@bd", obj.BookingDate);
                cmd1.Parameters.AddWithValue("@am", obj.Amount);
                cmd1.Parameters.AddWithValue("@np", obj.NumberofPersons);
                cmd1.Parameters.AddWithValue("@ts", obj.TicketStatus);
                con.Open();
                int rowcount = cmd1.ExecuteNonQuery();
                if(rowcount==1)
                {
                    return obj.ReferenceCode;
                }
                else
                {
                    return null;
                }
               
            }
            return null;
        }


        public int DeleteMovie(int intMovieID)
        {
            int rowsDel = 0;
            if (intMovieID != 0)
            {
                SqlConnection con = new SqlConnection(ConnectionString);
                SqlCommand cmd1 = new SqlCommand("Select ShowID from Shows where MovieID=@mid", con);
                cmd1.Parameters.AddWithValue("@mid", intMovieID);
                con.Open();
                SqlDataReader drr = cmd1.ExecuteReader();
                if (drr.HasRows)
                {

                    while (drr.Read())
                    {
                        int ShowID = int.Parse(drr["ShowID"].ToString());
                        SqlConnection con1 = new SqlConnection(ConnectionString);
                        SqlCommand cmd2 = new SqlCommand("Delete  from Tickets where ShowID=@sid", con1);
                        cmd2.Parameters.AddWithValue("@sid", ShowID);
                        con1.Open();
                        int rows = cmd2.ExecuteNonQuery();
                        rowsDel += rows;
                        con1.Close();
                        if (rowsDel > 0)
                        {
                            SqlConnection con2 = new SqlConnection(ConnectionString);
                            SqlCommand cmd3 = new SqlCommand("Delete from Shows Where ShowID=@sid", con2);
                            cmd3.Parameters.AddWithValue("@sid", ShowID);
                            con2.Open();
                            int rowCount = cmd3.ExecuteNonQuery();
                            rowsDel += rowCount;
                            con2.Close();
                            if (rowCount > 0)
                            {

                                SqlConnection con3 = new SqlConnection(ConnectionString);
                                SqlCommand cmd4 = new SqlCommand("Delete from Movies Where MovieID=@mid", con3);
                                cmd4.Parameters.AddWithValue("@mid", intMovieID);
                                con3.Open();
                                int delrows = cmd4.ExecuteNonQuery();
                                rowsDel += delrows;
                                con3.Close();
                                if (delrows == 1)
                                    return rowsDel;
                                else
                                    return rowsDel;
                            }

                        }

                    }
                }
                con.Close();
                return rowsDel;
            }
            else
                return rowsDel;

        }
    }
}

==========================================================================================================================

using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Web;

namespace ADO1
{
    public class StudentDAL
    {
        List<student> stdlist = new List<student>();
        
        public List <student>ViewAllEmployees()
        {
            SqlConnection con = new SqlConnection();
            con.ConnectionString = "Server=.;Initial Catalog=pubs;User ID=sa;Password=wipro@123";
            SqlCommand cmd = new SqlCommand();
            cmd.CommandText = "Select * From student2";
            cmd.Connection = con;
            con.Open();

            SqlDataReader dr = cmd.ExecuteReader();

            if(dr.HasRows)
            {
                while(dr.Read())
                {
                    student st = new student();
                    st.student_id = int.Parse(dr["student_id"].ToString());
                    st.student_name = dr["student_name"].ToString();
                    st.student_address = dr["student_address"].ToString();
                    st.city = dr["city"].ToString();
                    stdlist.Add(st);
                }
            }
            con.Close();
            return stdlist;

        }
        public int Addstudent(student stnd)
        {
            SqlConnection con = new SqlConnection();
            con.ConnectionString = "Server=.;Initial Catalog=pubs;User ID=sa;Password=wipro@123";
            SqlCommand cmd = new SqlCommand();
            cmd.CommandText = "Insert into student2(student_id,student_name,student_address,city)values(@id,@name,@address,@city);Select SCOPE_IDENTITY";
            cmd.Parameters.AddWithValue("@id",stnd.student_id);
            cmd.Parameters.AddWithValue("@name",stnd.student_name);
            cmd.Parameters.AddWithValue("@address", stnd.student_address);
            cmd.Parameters.AddWithValue("@city",stnd.city);
            cmd.Connection = con;
            con.Open();
            int stu_id = int.Parse(cmd.ExecuteScalar().ToString());
            return stu_id;

            con.Close();
      
            //if (rowcount == 1)
            //{
                //Response.Write("Record Inserted....!!");
            //}
        }
        public bool updatestudent(student stnd)
        {
            bool Isupdated = false;
            SqlConnection con = new SqlConnection();
            con.ConnectionString = "Server=.;Initial Catalog=pubs;User ID=sa;Password=wipro@123";
            SqlCommand cmd = new SqlCommand();
            cmd.CommandText = "Insert into student2(student_id,student_name,student_address,city)values(@id,@name,@address,@city)";
            cmd.Parameters.AddWithValue("@id", stnd.student_id);
            cmd.Parameters.AddWithValue("@name", stnd.student_name);
            cmd.Parameters.AddWithValue("@address", stnd.student_address);
            cmd.Parameters.AddWithValue("@city", stnd.city);
            cmd.Connection = con;
            con.Open();
            int stu_id = int.Parse(cmd.ExecuteScalar().ToString());
            int rowcount = cmd.ExecuteNonQuery();
            
            if (rowcount==1)
            {
                Isupdated = true;

            }
            return Isupdated;

            con.Close();
            
        }
        public bool DeleteEmployee(int stdID)
        {
            bool IsDeleted = false;

            SqlConnection con = new SqlConnection();
            con.ConnectionString = "Server=.;Initial Catalog=pubs;User ID=sa;Password=wipro@123";
            SqlCommand cmd = new SqlCommand();
            cmd.CommandText = "Delete From student2 where student_id=@id";
            cmd.Parameters.AddWithValue("@id", stdID);
            con.Open();
            cmd.Connection = con;
          
            int rowcount = cmd.ExecuteNonQuery();
           
            if (rowcount == 1)
            {
                IsDeleted = true;
            }
            return IsDeleted;
            con.Close();
        }

        public student StudentsearchID(int stdID)
        {
            student st = new student();

            SqlConnection con = new SqlConnection();
            con.ConnectionString = "Server=.;Initial Catalog=pubs;User ID=sa;Password=wipro@123";
            SqlCommand cmd = new SqlCommand();
            cmd.CommandText = "Select * from student2 where student_id=@id";
            cmd.Parameters.AddWithValue("@id",stdID);

            cmd.Connection = con;
            con.Open();
            SqlDataReader dr = cmd.ExecuteReader();
            if (dr.HasRows)
            {
                dr.Read();
                st.student_name= dr["student_name"].ToString();
               st.student_address = dr["student_address"].ToString();
               st.city = dr["city"].ToString();
               
               
            }
     return st;
            con.Close();

            
        }
    }
    }
