Sum of Stable- Unstable

using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public int findPassword(int input1,int input2,int input3,int input4,int input5)
    {
        //Read only region end
       //int[] arr=new int[input1.ToString().Length];
		int count=0,dig=0,temp=0,sum=0,sum1=0;
		int[] n={input1,input2,input3,input4,input5};
		//int count=0;
		int [] a=new int[10];
		for(int i=0;i<n.Length;i++)
		{
		
			int num= n[i];
		while(num!=0)
		{
			temp=num%10;
	         a[temp]=a[temp]+1;
			num=num/10;
		}
		for(int k=0;k<a.Length;k++)
		{
			if(a[k]!=0)
			{
				dig=a[k];
				break;
			}
		}
			for(int k=0;k<a.Length;k++)
			{
				if(a[k]!=dig&&a[k]!=0)
				{
					count++;
					break;
				}
			}
			
			if(count==1)
			{
				sum=sum+n[i];
			}
			else
			{
				sum1=sum1+n[i];
			}
			Array.Clear(a,0,a.Length);
			num=0;
			dig=0;
			count=0;
		}
	
		return sum1-sum;;
    }
}


**********************************************************************************************************
(Stable Unstable(max-min)

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace abc
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] n = { 2277, 123, 4455, 1223, 223 };
            int input2 = n.Length, temp = 0, num = 0, dig = 0, count = 0, stable = 0, unstable = 0, sum = 0;
            int[] a = new int[10];
            int[] s = new int[input2];
            int s1 = 0, u1 = 0,min=0,max=0;
            int[] u = new int[input2];
            for (int i = 0; i < input2; i++)
            {
                num = n[i];
                while (num != 0)
                {
                    temp = num % 10;
                    a[temp] = a[temp] + 1;
                    num = num / 10;
                }
                for (int j = 0; j < a.Length; j++)
                {
                    if (a[j] != 0)
                    {
                        dig = a[j];
                        break;
                    }
                }
                for (int j = 0; j < a.Length; j++)
                {
                    if (a[j] != 0 && a[j] != dig)
                    {
                        count++;
                        break;
                    }
                }
                if (count == 1)
                {
                    u[u1] = n[i];
                    u1++;
                   }

                else
                {
                    s[s1++]= n[i];


                    
                }
               
                Array.Clear(a, 0, a.Length);
                num = 0;
                count = 0;
                dig = 0;

            }

            max = s.Max();

            min = u[0];
            for(int m=0;m<u.Length;m++)
            {
                if(min>u[m] && u[m]!=0)
                {
                    min = u[m];
                }
            }
            sum = max - min;
       Console.WriteLine(sum);
            Console.ReadKey();
        }
    }
}

************************************************************************************************************
Sum Of Non Prime Index Values

using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    public int sumOfNonPrimeIndexValues(int[] input1,int input2)
    {
        //Read only region end
   int sum=0,count=0,count1=0,num=0,count2=0,k=0;
		int[] a=new int[input2];
	for(int i=3;i<input2;i++)
	{  
		num=i;
		for(int j=1;j<=num;j++)
		{
			if(i%j==0)
			{
				count++;
			}
		}
		if(count==2)
		{
			count1++;
		}
		else
		{
			a[k++]=input1[i];
			count2++;
		}
		num=0;
		count=0;
	}

		for(int i=0;i<a.Length;i++)
		{
			sum=sum+a[i];
		}
		sum=sum+input1[0]+input1[1];
		return sum;
	}
}
**********************************************************************************
Sum Of Prime Index Values

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace abc
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] n = {2,3,4,5,6,7,8,9,23};
            int input2 = n.Length,sum=0,count=0;
            for(int i=1;i<input2;i++)
            {
                for(int j=1;j<=i;j++)
                {
                    if(i%j==0)
                    {
                        count++;
                    }
                }
                if(count==2 )
                {
                    sum = sum + n[i];
                }

                count = 0;
            }
            

            Console.WriteLine(sum);
            Console.ReadKey(); 
        }
    }
}


**************************************************************************************
--------------------sum of longest odd sequence ----------------


        int sum=0;
        int count =0,final=0,seq=0,curridx=0,maxidx=0;
        for(int i=0;i<input2;i++)
		{
			if(input1[i]%2!=0)
			{
				count++;
				if(count==1){
					curridx=i;
				}
				if(count>=final){
					maxidx=curridx;
					
					final = count;
				}
				if(i==input2-1){
					seq++;
				}
			}
			else{
				if(count>1){
					seq++;
				}
				count=0;
			}
			
		}
		Console.WriteLine(maxidx);
		for(int i=maxidx;i<maxidx+final;i++)
		{
			sum+=input1[i];
		}
			Console.WriteLine(sum);
		return 0;




------------------Find result after alternate add_sub on  N--------------------------------------
public int AddSub(int input1,int input2)
{

        int sum =input1;
        if(input2==1)
		{
			for(int i=input1-1,j=0;i>0;i--,j++){
				if(j%2==0){
					sum -= i;
				}
				else{
					sum +=i;
				}
			}
		}
		if(input2==2){
		for(int i=input1-1,j=0;i>0;i--,j++){
				if(j%2==0){
					sum += i;
				}
				else{
					sum -=i;
				}
			}
		}
		return sum;
}

******************************************************************************************
Sum Of Longest Even Sequence

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace test
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] n = { 2, 4, 6, 8, 3, 5, 10, 8, 4,6,8};
            int input2 = n.Length;int sum=0;
            int count = 0,max=0,seq=0,curr_index=0,max_index=0;
            for(int i=0;i<n.Length;i++)
            {
                if (n[i] % 2 == 0)
                {
                    count++;

                    if (count == 1)

                    {
                        curr_index = i;
                    }
                        if (count >= max && count != 0)
                    {
                        max = count;
                        max_index = curr_index;

                    }
                    if(i==input2-1)
                    {
                        seq++;
                       
                    }
                }
                else
                {
                    if (count >= 1)
                    {
                        seq++;
                      

                    }
                    count = 0;
                }
               
            }
            for(int k=max_index;k<max_index+max;k++)
            {
                sum = sum + n[k];
            }
           // Console.WriteLine(seq);
            //Console.WriteLine(max);
            Console.WriteLine(sum);
            Console.ReadKey();
        }
       
    }

}

**********************************************************************************************
Decreasing Sequence

using System;
using System.Collections.Generic;

//Read only region start
public class UserMainCode
{
    //Assume following return types while writing the code for this question. 
    public class Result
    {
		public int output1;
		public int output2;
    }

    public Result decreasingSeq(int[] input1,int input2)
    {
        //Read only region end
     int count=1,seq=0,max=0;
		for(int i=0;i<input2-1;i++)
	 {
		 if(input1[i]>input1[i+1])
		 {
			 count++;
			 if(count>max )
			 {
				 max=count;
			 }
			 if(i==input2-2)
			 {
				 seq++;
			 }
		 }
		 else
		 {
			 if(count>1)
			 {
				 seq++;
			 }
			 count=1;
		 }
	 }
	
		Result r=new Result();
		r.output1=seq;
		r.output2=max;
		return r;
	}
}

**************************************************************************************************
Unit Digit Count

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace abc
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = 1279;
            int rem = 0, sum = 0,i=0,sum1=0,unit=0,tens=0,unit1=0,tens1=0,finalsum=0,sum2=0;
            int[] a= new int[n.ToString().Length];
           while(n!=0)
            {
                a[i] = n % 10;
                i++;
                n /= 10;


            }
            for(int j=0;j<a.Length;j++)
            {
                sum += a[j];
            }
            finalsum = sum;
            if(sum>9)
            {
                unit = sum % 10;
                tens = sum / 10;

                sum1 = unit + tens;
                finalsum = sum1;
            }
            if(sum1>9)
            {
                unit1 = sum1 % 10;
                tens1 = sum1 / 10;
                sum2 = unit1 + tens1;
                finalsum = sum2;
            }

            
            Console.WriteLine(finalsum);
            Console.ReadKey();
        }
    }
}
